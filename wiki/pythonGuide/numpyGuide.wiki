= 重要性 =
数据的来源与格式都十分丰富，文档，图像，声音，数值等，这些数据都可以简单的看成数字数组，比如将图像看成二维数字数组，声音可以看做时间和强度的一维数组，不管数据是何种形式，第一步都是将这些数据转换成数值数组的形式，才能进行分析。

= 创建数组 =
    numpy 要求数组必须包含同一类型的数据，numpy 可以是多维的。
1、从 Python 列表创建数组
{{{!#python
import numpy as np
np.array([1,4,2,5,3])

}}}

= 数组的操作 =
1、数组的属性：确定数组的大小、形状、存储大小、数据类型
    每个数组都有
    nidm（数组的维度）、shape（数组每个维度的大小）、size（数组总大小），dtype（数组的数据类型）等属性。
    
2、数组的索引：获取和设置数组各个元素的值
    一维数组[i] 二维数组[i,i] ——用中括号加数字索引
    
3、数组的切分：在大的数组中获取或设置更小的子数组
    x[start:stop:step]
    *与 python 列表切片不同 python 列表切片返回的是值的副本，numpy
    返回的是数据的视图*这意味着修改切片中的数据，原始数组也就变了。
    一维数组：
        x[:5] #前5个元素
        x[5:] #索引5之后的元素
        x[::2] # 每隔一个元素
        x[::-1] # 所有元素，逆序的
        x[5::-2] # 从索引5开始，每隔一个元素逆序
    多维数组:
        x[:2, :3] # 前两行，前三列
    获取数组的单列和单行：
        x[:,0] # 第一列
        x[0,:] # 第一行 出于语法简洁获取行时可以省略空的切片 == x[0]
4、数组的变形：改变给定数组的形状
    关注 reshape() 函数 和 newaxis 关键字。

5、数组的拼接和分裂：将多个数组合并为一个，以及将一个数组分裂成多个
    数组的拼接：np.concatenate, np.vstack 和np.hstack
    数组的分裂：np.split, np.hsplit, np.vsplit
    
= 数组的计算 =
在一些需要循环计算的过程中，传统的计算方法开销大，可以使用numpy
提供的通用函数，进行数组的计算 *TODO: EMA 的计算是否可以通过这种方式加快速度？*

1、算数运算
    +，-，*，/, //, **，%
2、绝对值
3、三角函数
4、指数和对数
5、专用的通用函数（可以搜索一些专用的统计函数）

== 通用函数的特性==
1、指定输出：所有通用函数都可以通过 out 参数来指定计算结果的存放位置
{{{!#python
x = np.arange(5)
y = np.empty(5)
np.multiply(x,10,out=y)
print(y)
[0. 10. 20. 30. 40.]
}}}
2、聚合
了解 reduce()方法

3、数组的求和 np.sum(x)
4、最大值、最小值： np.min(x), np.max(x)
    也可以使用 x.sum() x.min() x.max()
    找到每行的最大值 x.max(axis = 1)
    找到每列的最小值 x.min(axis = 0)
5、其他计算函数
| 函数名        | 描述       |
| np.mean       | 计算平均值 |
| np.std        | 计算标准差 |
| np.var        | 计算方差   |
| np.median     | 计算中位数 |
| np.percentile | 计算分位数 |
|               |            |

